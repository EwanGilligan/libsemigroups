# ############################################################################
# Automake configuration
##############################################################################

AM_CXXFLAGS =  -I$(top_srcdir)/include
AM_CXXFLAGS += -I$(top_srcdir)/extern/HPCombi/include
AM_CXXFLAGS += -I$(top_srcdir)/extern/HPCombi/include/fallback
AM_CXXFLAGS += -I$(top_srcdir)/extern/sparsehash-c11
AM_CXXFLAGS += -mavx -flax-vector-conversions -mlzcnt
AM_CXXFLAGS += -std=gnu++11 -g -O3 -march=native -Wall -Wextra
AM_CXXFLAGS += $(WARNING_CXXFLAGS)

AM_LDFLAGS  =  -no-undefined

if LIBSEMIGROUPS_DEBUG
AM_CPPFLAGS = -DDEBUG
AM_CXXFLAGS += -g3 -O0
AM_CXXFLAGS += -fno-omit-frame-pointer -pedantic
AM_CXXFLAGS += -Wno-c++11-extensions -Wold-style-cast 
else
AM_CPPFLAGS = -DNDEBUG
endif

if HPCOMBI_CONSTEXPR_FUN_ARGS
AM_CPPFLAGS += -DHPCOMBI_CONSTEXPR_FUN_ARGS
endif

ACLOCAL_AMFLAGS	= -I m4

## We include libsemigroups-config.h in the distribution even though it is
## autogenerated by configure.

## libsemigroups headers
pkginclude_HEADERS =  include/adapters.h
pkginclude_HEADERS += include/blocks.h
pkginclude_HEADERS += include/bmat8.h
pkginclude_HEADERS += include/cong.h
pkginclude_HEADERS += include/constants.h
pkginclude_HEADERS += include/element-helper.h
pkginclude_HEADERS += include/element.h
pkginclude_HEADERS += include/hpcombi.h
pkginclude_HEADERS += include/libsemigroups.h
pkginclude_HEADERS += include/rws.h
pkginclude_HEADERS += include/rwse.h
pkginclude_HEADERS += include/schreier-sims.h
pkginclude_HEADERS += include/semigroup-base.h
pkginclude_HEADERS += include/semigroup-traits.h
pkginclude_HEADERS += include/semigroup.h
pkginclude_HEADERS += include/semiring.h
pkginclude_HEADERS += include/types.h

pkginclude_HEADERS += include/internal/libsemigroups-config.h
pkginclude_HEADERS += include/internal/libsemigroups-debug.h
pkginclude_HEADERS += include/internal/libsemigroups-exception.h
pkginclude_HEADERS += include/internal/partition.h
pkginclude_HEADERS += include/internal/range.h
pkginclude_HEADERS += include/internal/recvec.h
pkginclude_HEADERS += include/internal/report.h
pkginclude_HEADERS += include/internal/square.h
pkginclude_HEADERS += include/internal/stl.h
pkginclude_HEADERS += include/internal/timer.h
pkginclude_HEADERS += include/internal/uf.h

if LIBSEMIGROUPS_HPCOMBI
pkginclude_HEADERS += extern/HPCombi/include/hpcombi.hpp
pkginclude_HEADERS += extern/HPCombi/include/perm16.hpp
pkginclude_HEADERS += extern/HPCombi/include/perm16_impl.hpp
pkginclude_HEADERS += extern/HPCombi/include/power.hpp
pkginclude_HEADERS += extern/HPCombi/include/fallback/gcdlcm.hpp
pkginclude_HEADERS += extern/HPCombi/include/fallback/seq.hpp
endif

lib_LTLIBRARIES = libsemigroups.la

## libsemigroups sources
libsemigroups_la_SOURCES =  src/blocks.cc
libsemigroups_la_SOURCES += src/bmat8.cc
libsemigroups_la_SOURCES += src/cong-intf.cc
libsemigroups_la_SOURCES += src/cong.cc
libsemigroups_la_SOURCES += src/element.cc
libsemigroups_la_SOURCES += src/fpsemi-intf.cc
libsemigroups_la_SOURCES += src/race.cc
libsemigroups_la_SOURCES += src/runner.cc
libsemigroups_la_SOURCES += src/rws.cc
libsemigroups_la_SOURCES += src/rwse.cc
libsemigroups_la_SOURCES += src/semigroup-base.cc
libsemigroups_la_SOURCES += src/todd-coxeter.cc
libsemigroups_la_SOURCES += src/uf.cc

libsemigroups_la_CPPFLAGS = $(AM_CPPFLAGS) $(CODE_COVERAGE_CPPFLAGS)
libsemigroups_la_CFLAGS   = $(AM_CFLAGS)   $(CODE_COVERAGE_CFLAGS)
libsemigroups_la_CXXFLAGS = $(AM_CXXFLAGS) $(CODE_COVERAGE_CXXFLAGS)

libsemigroups_la_LIBS = $(AM_LDFLAGS) $(CODE_COVERAGE_LIBS)

## Extra files for the distribution

LINT_FORMAT_FILES_EXTRA =  src/cong/kbfp.h
LINT_FORMAT_FILES_EXTRA += src/cong/kbp.h
LINT_FORMAT_FILES_EXTRA += src/cong/tc.h

LINT_FORMAT_FILES_EXTRA += src/cong/kbfp.cc
LINT_FORMAT_FILES_EXTRA += src/cong/kbp.cc
LINT_FORMAT_FILES_EXTRA += src/cong/tc.cc

EXTRA_DIST = $(LINT_FORMAT_FILES_EXTRA)
EXTRA_DIST += tests/catch.hpp
EXTRA_DIST += README.md LICENSE CPPLINT.cfg .clang-format Doxyfile
EXTRA_DIST += VERSION extern/HPCombi/VERSION

BENCHMARK_LINT_FORMAT =  benchmark/src/bmat8.bm.cpp
BENCHMARK_LINT_FORMAT += benchmark/src/cong.bm.cpp
BENCHMARK_LINT_FORMAT += benchmark/src/examples.h
BENCHMARK_LINT_FORMAT += benchmark/src/nridempotents.bm.cpp
BENCHMARK_LINT_FORMAT += benchmark/src/semigroups.bm.cpp

## lstest sources

CHECK_LOG_DIR = tests/log
CHECK_PROG    = ./lstest$(EXEEXT)
CHECK_FLAGS1  = --durations yes --use-colour yes --order lex --abort
CHECK_FLAGS2  = [quick],[standard]

check_PROGRAMS = lstest

lstest_SOURCES =  tests/main.test.cc
lstest_SOURCES += tests/blocks.test.cc
lstest_SOURCES += tests/bmat8.test.cc
lstest_SOURCES += tests/cong.test.cc
lstest_SOURCES += tests/constants.test.cc
lstest_SOURCES += tests/element.test.cc
lstest_SOURCES += tests/hpcombi.test.cc
lstest_SOURCES += tests/kbp.test.cc
lstest_SOURCES += tests/kbfp.test.cc
lstest_SOURCES += tests/p.test.cc
lstest_SOURCES += tests/partition.test.cc
lstest_SOURCES += tests/recvec.test.cc
lstest_SOURCES += tests/rws.1.test.cc
lstest_SOURCES += tests/rws.2.test.cc
lstest_SOURCES += tests/rwse.test.cc
lstest_SOURCES += tests/schreier-sims.test.cc
lstest_SOURCES += tests/semigroup.1.test.cc
lstest_SOURCES += tests/semigroup.2.test.cc
lstest_SOURCES += tests/semigroup.3.test.cc
lstest_SOURCES += tests/semigroup.4.test.cc
lstest_SOURCES += tests/semigroup.bipart.test.cc
lstest_SOURCES += tests/semigroup.bmat.test.cc
lstest_SOURCES += tests/semigroup.booleanmat.test.cc
lstest_SOURCES += tests/semigroup.integers.test.cc
lstest_SOURCES += tests/semigroup.integermatrices.test.cc
lstest_SOURCES += tests/semigroup.intpairs.test.cc
lstest_SOURCES += tests/semigroup.partialperm.test.cc
lstest_SOURCES += tests/semigroup.pbr.test.cc
lstest_SOURCES += tests/semigroup.projmaxplus.test.cc
lstest_SOURCES += tests/semigroup.transformations.test.cc
lstest_SOURCES += tests/semigroup.tropicalmaxplus.test.cc
lstest_SOURCES += tests/semiring.test.cc
lstest_SOURCES += tests/timer.test.cc
lstest_SOURCES += tests/tc.test.cc
lstest_SOURCES += tests/todd-coxeter.test.cc
lstest_SOURCES += tests/uf.test.cc

lstest_CPPFLAGS = $(AM_CPPFLAGS) $(CODE_COVERAGE_CPPFLAGS) 
lstest_CFLAGS   = $(AM_CFLAGS)   $(CODE_COVERAGE_CFLAGS)
lstest_CXXFLAGS = $(AM_CXXFLAGS) $(CODE_COVERAGE_CXXFLAGS)

lstest_LIBS = $(AM_LDFLAGS) $(CODE_COVERAGE_LIBS)
lstest_LDADD = libsemigroups.la

## Make targets

@CODE_COVERAGE_RULES@

all-local: libsemigroups.la
if LIBSEMIGROUPS_DEBUG
	@echo "********************************************************************"
	@echo "************************ Debug mode enabled ************************"
	@echo "********************************************************************"
endif

clean-local: clean-local-check

clean-local-check:
	rm -rf $(CHECK_LOG_DIR) $(check_PROGRAMS)
	rm -rf benchmark/src/build
	rm -f benchmark/gbench/*.pyc
	rm -f benchmark/gbench/__py_cache__/*.pyc
.PHONY: clean-local-check

distclean-local: distclean-local-check
	rm -f src/libsemigroups-config.h
.PHONY: distclean-local-check

superclean: distclean
	git clean -xdf --exclude *.swp --exclude *.swo
.PHONY: superclean

check:
	@$(mkdir_p) $(CHECK_LOG_DIR)
	@today=`date +%Y-%m-%d-%H-%M-%S`;                                   \
	echo "Running the tests ($(CHECK_LOG_DIR)/$$today.log) . . .";      \
	$(CHECK_PROG) $(CHECK_FLAGS1) $(CHECK_FLAGS2) | tee -a $(CHECK_LOG_DIR)/$$today.log; \
	( ! grep -q -E "FAILED|failed" $(CHECK_LOG_DIR)/$$today.log )

check-quick: CHECK_FLAGS2 = [quick]
check-quick: check

check-all: CHECK_FLAGS2 =
check-all: check
.PHONY: check-quick, check-all

format:
	@echo "Running clang-format . . .";
	@clang-format -i $(pkginclude_HEADERS) $(libsemigroups_la_SOURCES)
	@clang-format -i $(lstest_SOURCES) $(BENCHMARK_LINT_FORMAT)

lint:
	@echo "Running cpplint . . .";
	@cpplint $(pkginclude_HEADERS) $(libsemigroups_la_SOURCES)
	@cpplint $(lstest_SOURCES) $(BENCHMARK_LINT_FORMAT)

doc:
	@echo "Generating documentation . . ."; \
	doxygen Doxyfile
	@echo "See: html/index.html";
