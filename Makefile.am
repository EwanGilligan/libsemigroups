##############################################################################
# Automake configuration
##############################################################################

AM_CXXFLAGS =  -I$(top_srcdir)/include
AM_CXXFLAGS += -I$(top_srcdir)/extern/HPCombi/include
AM_CXXFLAGS += -I$(top_srcdir)/extern/HPCombi/include/fallback
AM_CXXFLAGS += -I$(top_srcdir)/extern/sparsehash-c11
AM_CXXFLAGS += -mavx -flax-vector-conversions
AM_CXXFLAGS += -std=gnu++11 -g -O3 -march=native -Wall -Wextra
AM_CXXFLAGS += $(WARNING_CXXFLAGS)

AM_LDFLAGS  =  -no-undefined

if LIBSEMIGROUPS_DEBUG
AM_CPPFLAGS = -DDEBUG
AM_CXXFLAGS += -g3 -O0 -fno-omit-frame-pointer 
else
AM_CPPFLAGS = -DNDEBUG
endif

if HPCOMBI_CONSTEXPR_FUN_ARGS
AM_CPPFLAGS += -DHPCOMBI_CONSTEXPR_FUN_ARGS
endif

AM_CPPFLAGS += $(CODE_COVERAGE_CPPFLAGS)
AM_CXXFLAGS += $(CODE_COVERAGE_CXXFLAGS)

LIBS     = $(AM_LDFLAGS) 

ACLOCAL_AMFLAGS	= -I m4

## We include libsemigroups-config.hpp in the distribution even though it is
## autogenerated by configure, for use with, for example, libsemigroups_cppyy

## libsemigroups headers
pkginclude_HEADERS =  include/adapters.hpp
pkginclude_HEADERS += include/blocks.hpp
pkginclude_HEADERS += include/bmat8.hpp
pkginclude_HEADERS += include/cong-base.hpp
pkginclude_HEADERS += include/cong-pair-impl.hpp
pkginclude_HEADERS += include/cong-pair.hpp
pkginclude_HEADERS += include/cong.hpp
pkginclude_HEADERS += include/constants.hpp
pkginclude_HEADERS += include/containers.hpp
pkginclude_HEADERS += include/digraph.hpp
pkginclude_HEADERS += include/element.hpp
pkginclude_HEADERS += include/forest.hpp
pkginclude_HEADERS += include/fpsemi-base.hpp
pkginclude_HEADERS += include/fpsemi.hpp
pkginclude_HEADERS += include/froidure-pin-base.hpp
pkginclude_HEADERS += include/froidure-pin-impl.hpp
pkginclude_HEADERS += include/froidure-pin.hpp
pkginclude_HEADERS += include/hpcombi.hpp
pkginclude_HEADERS += include/iterator.hpp
pkginclude_HEADERS += include/kbe.hpp
pkginclude_HEADERS += include/knuth-bendix.hpp
pkginclude_HEADERS += include/konieczny.hpp
pkginclude_HEADERS += include/libsemigroups-config.hpp
pkginclude_HEADERS += include/libsemigroups-debug.hpp
pkginclude_HEADERS += include/libsemigroups-exception.hpp
pkginclude_HEADERS += include/libsemigroups.hpp
pkginclude_HEADERS += include/obvinf.hpp
pkginclude_HEADERS += include/orb.hpp
pkginclude_HEADERS += include/race.hpp
pkginclude_HEADERS += include/range.hpp
pkginclude_HEADERS += include/reduct.hpp
pkginclude_HEADERS += include/report.hpp
pkginclude_HEADERS += include/runner.hpp
pkginclude_HEADERS += include/schreier-sims.hpp
pkginclude_HEADERS += include/semiring.hpp
pkginclude_HEADERS += include/stl.hpp
pkginclude_HEADERS += include/string.hpp
pkginclude_HEADERS += include/tce.hpp
pkginclude_HEADERS += include/timer.hpp
pkginclude_HEADERS += include/todd-coxeter.hpp
pkginclude_HEADERS += include/traits.hpp
pkginclude_HEADERS += include/types.hpp
pkginclude_HEADERS += include/uf.hpp
pkginclude_HEADERS += include/wrap.hpp

if LIBSEMIGROUPS_HPCOMBI
pkginclude_HEADERS += extern/HPCombi/include/hpcombi.hpp
pkginclude_HEADERS += extern/HPCombi/include/perm16.hpp
pkginclude_HEADERS += extern/HPCombi/include/perm16_impl.hpp
pkginclude_HEADERS += extern/HPCombi/include/power.hpp
pkginclude_HEADERS += extern/HPCombi/include/fallback/gcdlcm.hpp
pkginclude_HEADERS += extern/HPCombi/include/fallback/seq.hpp
endif

lib_LTLIBRARIES = libsemigroups.la

## libsemigroups sources
libsemigroups_la_SOURCES =  src/blocks.cpp
libsemigroups_la_SOURCES += src/bmat8.cpp
libsemigroups_la_SOURCES += src/cong-base.cpp
libsemigroups_la_SOURCES += src/cong-pair.cpp
libsemigroups_la_SOURCES += src/cong.cpp
libsemigroups_la_SOURCES += src/element.cpp
libsemigroups_la_SOURCES += src/fpsemi-base.cpp
libsemigroups_la_SOURCES += src/fpsemi.cpp
libsemigroups_la_SOURCES += src/froidure-pin-base.cpp
libsemigroups_la_SOURCES += src/knuth-bendix.cpp
libsemigroups_la_SOURCES += src/race.cpp
libsemigroups_la_SOURCES += src/reduct.cpp
libsemigroups_la_SOURCES += src/report.cpp
libsemigroups_la_SOURCES += src/runner.cpp
libsemigroups_la_SOURCES += src/semiring.cpp
libsemigroups_la_SOURCES += src/tce.cpp
libsemigroups_la_SOURCES += src/todd-coxeter.cpp
libsemigroups_la_SOURCES += src/uf.cpp

libsemigroups_la_CPPFLAGS = $(AM_CPPFLAGS) 
libsemigroups_la_CXXFLAGS = $(AM_CXXFLAGS)

## Extra files for the distribution

LINT_FORMAT_FILES_EXTRA =  src/kbe-impl.hpp 
LINT_FORMAT_FILES_EXTRA += src/knuth-bendix-impl.hpp 
## ?? LINT_FORMAT_FILES_EXTRA += tests/libsemigroups.tests.hpp

EXTRA_DIST =  $(LINT_FORMAT_FILES_EXTRA)
EXTRA_DIST += tests/catch.hpp
EXTRA_DIST += README.md LICENSE CPPLINT.cfg .clang-format Doxyfile
EXTRA_DIST += VERSION extern/HPCombi/VERSION

## The following are not included in the distro
BENCHMARK_LINT_FORMAT =  benchmark/bench_digraph.cpp
# BENCHMARK_LINT_FORMAT += benchmark/

## For testing . . .

CHECK_PROG    = ./test_all$(EXEEXT)
CHECK_FLAGS1  = --use-colour yes --order lex --abort
CHECK_FLAGS2  = [quick]

check_PROGRAMS =  test_all 
check_PROGRAMS += test_blocks
check_PROGRAMS += test_bmat8
check_PROGRAMS += test_cong_pair
check_PROGRAMS += test_cong
check_PROGRAMS += test_constants
check_PROGRAMS += test_containers
check_PROGRAMS += test_digraph
check_PROGRAMS += test_element
check_PROGRAMS += test_forest
check_PROGRAMS += test_fpsemi
check_PROGRAMS += test_froidure_pin_bipart
check_PROGRAMS += test_froidure_pin_bmat8
check_PROGRAMS += test_froidure_pin_boolmat
check_PROGRAMS += test_froidure_pin_element
check_PROGRAMS += test_froidure_pin_integers
check_PROGRAMS += test_froidure_pin_intmat
check_PROGRAMS += test_froidure_pin_intpairs
check_PROGRAMS += test_froidure_pin_pbr
check_PROGRAMS += test_froidure_pin_pperm
check_PROGRAMS += test_froidure_pin_projmaxplus
check_PROGRAMS += test_froidure_pin_transf
check_PROGRAMS += test_froidure_pin_tropmaxplus
check_PROGRAMS += test_hpcombi
check_PROGRAMS += test_kbe
check_PROGRAMS += test_knuth_bendix
check_PROGRAMS += test_konieczny
check_PROGRAMS += test_orb
check_PROGRAMS += test_race
check_PROGRAMS += test_runner
check_PROGRAMS += test_schreier_sims
check_PROGRAMS += test_semiring
check_PROGRAMS += test_timer
check_PROGRAMS += test_todd_coxeter
check_PROGRAMS += test_uf

LDADD = libsemigroups.la

## Do not specify CXXFLAGS/CFLAGS/LDFLAGS because this causes a separate ##
## test-main.o executable to be generated for every test_* executable, which
## takes a serious amount of time.

test_all_SOURCES =  tests/fpsemi-examples.cpp
test_all_SOURCES += tests/test-main.cpp
test_all_SOURCES += tests/test-blocks.cpp
test_all_SOURCES += tests/test-bmat8.cpp
test_all_SOURCES += tests/test-cong-pair.cpp
test_all_SOURCES += tests/test-cong.cpp
test_all_SOURCES += tests/test-constants.cpp # TODO this file is empty
test_all_SOURCES += tests/test-containers.cpp
test_all_SOURCES += tests/test-digraph.cpp
test_all_SOURCES += tests/test-element.cpp
test_all_SOURCES += tests/test-forest.cpp
test_all_SOURCES += tests/test-fpsemi.cpp
test_all_SOURCES += tests/test-froidure-pin-bipart.cpp
test_all_SOURCES += tests/test-froidure-pin-bmat8.cpp
test_all_SOURCES += tests/test-froidure-pin-boolmat.cpp
test_all_SOURCES += tests/test-froidure-pin-element.cpp
test_all_SOURCES += tests/test-froidure-pin-integers.cpp
test_all_SOURCES += tests/test-froidure-pin-intmat.cpp
test_all_SOURCES += tests/test-froidure-pin-intpairs.cpp
test_all_SOURCES += tests/test-froidure-pin-pbr.cpp
test_all_SOURCES += tests/test-froidure-pin-pperm.cpp
test_all_SOURCES += tests/test-froidure-pin-projmaxplus.cpp
test_all_SOURCES += tests/test-froidure-pin-transf.cpp
test_all_SOURCES += tests/test-froidure-pin-tropmaxplus.cpp
test_all_SOURCES += tests/test-hpcombi.cpp
test_all_SOURCES += tests/test-kbe.cpp
test_all_SOURCES += tests/test-knuth-bendix.cpp
test_all_SOURCES += tests/test-konieczny.cpp
test_all_SOURCES += tests/test-main.cpp
test_all_SOURCES += tests/test-orb.cpp
test_all_SOURCES += tests/test-race.cpp
test_all_SOURCES += tests/test-runner.cpp
test_all_SOURCES += tests/test-schreier-sims.cpp
test_all_SOURCES += tests/test-semiring.cpp
test_all_SOURCES += tests/test-timer.cpp
test_all_SOURCES += tests/test-todd-coxeter.cpp
test_all_SOURCES += tests/test-uf.cpp

test_blocks_SOURCES = tests/test-blocks.cpp
test_blocks_SOURCES += tests/test-main.cpp

test_bmat8_SOURCES = tests/test-bmat8.cpp
test_bmat8_SOURCES += tests/test-main.cpp

test_cong_pair_SOURCES = tests/test-cong-pair.cpp
test_cong_pair_SOURCES += tests/test-main.cpp

test_cong_SOURCES = tests/test-cong.cpp
test_cong_SOURCES += tests/test-main.cpp

test_constants_SOURCES = tests/test-constants.cpp # TODO this file is empty
test_constants_SOURCES += tests/test-main.cpp

test_containers_SOURCES = tests/test-containers.cpp
test_containers_SOURCES += tests/test-main.cpp

test_digraph_SOURCES = tests/test-digraph.cpp
test_digraph_SOURCES += tests/test-main.cpp

test_element_SOURCES = tests/test-element.cpp
test_element_SOURCES += tests/test-main.cpp

test_forest_SOURCES = tests/test-forest.cpp
test_forest_SOURCES += tests/test-main.cpp

test_fpsemi_SOURCES = tests/test-fpsemi.cpp
test_fpsemi_SOURCES += tests/test-main.cpp

test_froidure_pin_bipart_SOURCES = tests/test-froidure-pin-bipart.cpp
test_froidure_pin_bipart_SOURCES += tests/test-main.cpp

test_froidure_pin_bmat8_SOURCES = tests/test-froidure-pin-bmat8.cpp
test_froidure_pin_bmat8_SOURCES += tests/test-main.cpp

test_froidure_pin_boolmat_SOURCES = tests/test-froidure-pin-boolmat.cpp
test_froidure_pin_boolmat_SOURCES += tests/test-main.cpp

test_froidure_pin_element_SOURCES = tests/test-froidure-pin-element.cpp
test_froidure_pin_element_SOURCES += tests/test-main.cpp

test_froidure_pin_integers_SOURCES = tests/test-froidure-pin-integers.cpp
test_froidure_pin_integers_SOURCES += tests/test-main.cpp

test_froidure_pin_intmat_SOURCES = tests/test-froidure-pin-intmat.cpp
test_froidure_pin_intmat_SOURCES += tests/test-main.cpp

test_froidure_pin_intpairs_SOURCES = tests/test-froidure-pin-intpairs.cpp
test_froidure_pin_intpairs_SOURCES += tests/test-main.cpp

test_froidure_pin_pbr_SOURCES = tests/test-froidure-pin-pbr.cpp
test_froidure_pin_pbr_SOURCES += tests/test-main.cpp

test_froidure_pin_pperm_SOURCES = tests/test-froidure-pin-pperm.cpp
test_froidure_pin_pperm_SOURCES += tests/test-main.cpp

test_froidure_pin_projmaxplus_SOURCES = tests/test-froidure-pin-projmaxplus.cpp
test_froidure_pin_projmaxplus_SOURCES += tests/test-main.cpp

test_froidure_pin_transf_SOURCES = tests/test-froidure-pin-transf.cpp
test_froidure_pin_transf_SOURCES += tests/test-main.cpp

test_froidure_pin_tropmaxplus_SOURCES = tests/test-froidure-pin-tropmaxplus.cpp
test_froidure_pin_tropmaxplus_SOURCES += tests/test-main.cpp

test_hpcombi_SOURCES = tests/test-hpcombi.cpp
test_hpcombi_SOURCES += tests/test-main.cpp

test_kbe_SOURCES = tests/test-kbe.cpp
test_kbe_SOURCES += tests/test-main.cpp

test_knuth_bendix_SOURCES = tests/test-knuth-bendix.cpp
test_knuth_bendix_SOURCES += tests/test-main.cpp

test_konieczny_SOURCES = tests/test-konieczny.cpp
test_konieczny_SOURCES += tests/test-main.cpp

test_orb_SOURCES = tests/test-orb.cpp
test_orb_SOURCES += tests/test-main.cpp

test_race_SOURCES = tests/test-race.cpp
test_race_SOURCES += tests/test-main.cpp

test_runner_SOURCES = tests/test-runner.cpp
test_runner_SOURCES += tests/test-main.cpp

test_schreier_sims_SOURCES = tests/test-schreier-sims.cpp
test_schreier_sims_SOURCES += tests/test-main.cpp

test_semiring_SOURCES = tests/test-semiring.cpp
test_semiring_SOURCES += tests/test-main.cpp

test_timer_SOURCES = tests/test-timer.cpp
test_timer_SOURCES += tests/test-main.cpp

test_todd_coxeter_SOURCES = tests/test-todd-coxeter.cpp
test_todd_coxeter_SOURCES += tests/test-main.cpp

test_uf_SOURCES = tests/test-uf.cpp
test_uf_SOURCES += tests/test-main.cpp

## Make targets

@CODE_COVERAGE_RULES@

all-local: libsemigroups.la
if LIBSEMIGROUPS_DEBUG
	@echo "********************************************************************"
	@echo "************************ Debug mode enabled ************************"
	@echo "********************************************************************"
endif

clean-local-check:
	rm -rf $(check_PROGRAMS)
	rm -rf benchmark/src/build
	rm -f benchmark/gbench/*.pyc
	rm -f benchmark/gbench/__py_cache__/*.pyc
.PHONY: clean-local-check

distclean-local: distclean-local-check
	rm -f include/libsemigroups-config.hpp
.PHONY: distclean-local-check

superclean: distclean
	git clean -xdf --exclude *.swp --exclude *.swo
.PHONY: superclean

check:
	$(CHECK_PROG) $(CHECK_FLAGS1) $(CHECK_FLAGS2)

check-standard: CHECK_FLAGS2 = [quick],[standard]
check-standard: check

check-all: CHECK_FLAGS2 =
check-all: check
.PHONY: check-standard, check-all

format:
	@echo "Running clang-format . . .";
	@clang-format -i --verbose $(pkginclude_HEADERS) $(libsemigroups_la_SOURCES)
	@clang-format -i --verbose $(test_all_SOURCES) $(LINT_FORMAT_FILES_EXTRA)
	@clang-format -i --verbose $(BENCHMARK_LINT_FORMAT)

lint:
	@echo "Running cpplint . . .";
	@cpplint $(pkginclude_HEADERS) $(libsemigroups_la_SOURCES)
	@cpplint $(test_all_SOURCES) $(LINT_FORMAT_FILES_EXTRA)
	@cpplint $(BENCHMARK_LINT_FORMAT)

doc:
	@echo "Generating documentation . . ."; \
	doxygen Doxyfile
	@echo "See: html/index.html";
